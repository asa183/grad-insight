name: Professor Profiles Clean HTML

on:
  workflow_dispatch:
    inputs:
      sheet_id:
        description: "Override SHEET_ID (optional)"
        required: false
        default: 160q2zqD-7oiFzuXcvTl5eEjC0dkmwrMuInTzSP_6Pwc
        type: string
      sheet_name:
        description: "Sheet tab name"
        required: false
        default: MERGED
        type: string
      drive_folder_id:
        description: "Drive folder ID to upload"
        required: false
        default: 1Xp-oLxyYgqx6A5QS0bWYNkRkhf0hN_LG
        type: string
      method:
        description: "Capture method override (http|playwright)"
        required: false
        type: string
      force_pw_substr:
        description: "Comma-separated substrings of URLs to force Playwright"
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-22.04
    env:
      GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_REFRESH_TOKEN: ${{ secrets.OAUTH_REFRESH_TOKEN }}
      URL_COL: '7'
      # Prefer SHEET_ID2 for MERGED; allow lowercase names; then fallback to SHEET_ID
      SHEET_ID: ${{ inputs.sheet_id || secrets.SHEET_ID2 || secrets.sheet_id2 || vars.SHEET_ID2 || vars.sheet_id2 || secrets.SHEET_ID }}
      SHEET_NAME: ${{ inputs.sheet_name || secrets.SHEET_NAME2 || secrets.sheet_name2 || vars.SHEET_NAME2 || vars.sheet_name2 || 'MERGED' }}
      # 保存先（教授・研究室用）
      DRIVE_FOLDER_ID: ${{ inputs.drive_folder_id || secrets.DRIVE_FOLDER_ID2 || secrets.drive_folder_id2 || vars.DRIVE_FOLDER_ID2 || vars.drive_folder_id2 || secrets.DRIVE_FOLDER_ID || vars.DRIVE_FOLDER_ID || '1Xp-oLxyYgqx6A5QS0bWYNkRkhf0hN_LG' }}
      METHOD: ${{ inputs.method }}
      CONCURRENCY: '3'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Print effective env
        run: |
          echo "SHEET_ID=$SHEET_ID"
          echo "SHEET_NAME=$SHEET_NAME"
          echo "DRIVE_FOLDER_ID=$DRIVE_FOLDER_ID"

      # === Install deps (no browsers) ===
      - name: Install dependencies (grabber)
        working-directory: tools/faculty-grabber
        run: |
          npm install --no-audit --no-fund

      # === Build grabber ===
      - name: Build faculty-grabber
        working-directory: tools/faculty-grabber
        run: |
          npm run build
          echo "grabber dist contents:" && ls -la dist || true

      - name: Grab HTTP-first (no Playwright; capture only)
        env:
          SHEET_ID: ${{ env.SHEET_ID }}
          SHEET_NAME: ${{ env.SHEET_NAME }}
          DRIVE_FOLDER_ID: ${{ env.DRIVE_FOLDER_ID }}
          GOOGLE_CREDENTIALS_JSON: ${{ env.GOOGLE_CREDENTIALS_JSON || secrets.GOOGLE_CREDENTIALS_JSON }}
          OAUTH_CLIENT_ID: ${{ env.OAUTH_CLIENT_ID || secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ env.OAUTH_CLIENT_SECRET || secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_REFRESH_TOKEN: ${{ env.OAUTH_REFRESH_TOKEN || secrets.OAUTH_REFRESH_TOKEN }}
          METHOD: http
          ALLOW_PLAYWRIGHT: '0'
        run: |
          node tools/faculty-grabber/dist/runFromSheet.js

      # === Build cleaner early for first text pass ===
      - name: Build cleaner (for first pass)
        working-directory: tools/faculty-cleaner
        run: |
          npm install --no-audit --no-fund
          npm run build

      # Generate cleaned TEXT from captured HTMLs before any Playwright install
      - name: Run cleaner (text mode, first pass)
        env:
          INPUT_DIR: ../../captures
          OUTPUT_DIR: ../../cleaned
          CLEAN_MODE: text
        working-directory: tools/faculty-cleaner
        run: |
          node dist/runDir.js
          echo "cleaned dir (pass1):" && ls -la ../../cleaned || true

      - name: Check if Playwright is needed
        id: chk
        run: |
          if [ -f captures/_summary.json ]; then
            fail=$(node -e "console.log(require('./captures/_summary.json').fail||0)")
          else
            fail=0
          fi
          echo "fail=$fail"
          if [ "$fail" -gt 0 ] || [ -n "${{ inputs.force_pw_substr }}" ]; then echo "needs_pw=1" >> $GITHUB_OUTPUT; else echo "needs_pw=0" >> $GITHUB_OUTPUT; fi

      # === Install Playwright only if needed ===
      - name: Install Playwright browsers
        if: steps.chk.outputs.needs_pw == '1'
        working-directory: tools/faculty-grabber
        run: |
          npm install --no-audit --no-fund
          npx playwright install --with-deps

      - name: Grab with Playwright (failed-only)
        if: steps.chk.outputs.needs_pw == '1'
        env:
          SHEET_ID: ${{ env.SHEET_ID }}
          SHEET_NAME: ${{ env.SHEET_NAME }}
          DRIVE_FOLDER_ID: ${{ env.DRIVE_FOLDER_ID }}
          GOOGLE_CREDENTIALS_JSON: ${{ env.GOOGLE_CREDENTIALS_JSON || secrets.GOOGLE_CREDENTIALS_JSON }}
          OAUTH_CLIENT_ID: ${{ env.OAUTH_CLIENT_ID || secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ env.OAUTH_CLIENT_SECRET || secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_REFRESH_TOKEN: ${{ env.OAUTH_REFRESH_TOKEN || secrets.OAUTH_REFRESH_TOKEN }}
          METHOD: playwright
          ALLOW_PLAYWRIGHT: '1'
          FORCE_PW_SUBSTR: ${{ inputs.force_pw_substr }}
          ONLY_FAILED: '1'
        run: |
          node tools/faculty-grabber/dist/runFromSheet.js

      # Second text pass for newly captured Playwright pages
      - name: Run cleaner (text mode, second pass)
        if: steps.chk.outputs.needs_pw == '1'
        env:
          INPUT_DIR: ../../captures
          OUTPUT_DIR: ../../cleaned
          CLEAN_MODE: text
        working-directory: tools/faculty-cleaner
        run: |
          node dist/runDir.js
          echo "cleaned dir (pass2):" && ls -la ../../cleaned || true

      - name: Upload captures (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: captured-html
          path: captures/**
          if-no-files-found: ignore

      # === Self-check（今回処理分のみ判定） ===
      - name: Self-check metrics
        run: |
          node tools/faculty-grabber/dist/selfcheck.js

      # (cleaner already built and executed above)

      - name: Write to Sheets & upload to Drive (cleaned TXT only; K列更新→J列OFF)
        env:
          INPUT_DIR: ../../cleaned
          CAP_DIR: ../../captures
          UPLOAD_SOURCE: cleaned
          SHEET_ID: ${{ env.SHEET_ID }}
          SHEET_NAME: ${{ env.SHEET_NAME }}
          DRIVE_FOLDER_ID: ${{ env.DRIVE_FOLDER_ID }}
          GOOGLE_CREDENTIALS_JSON: ${{ env.GOOGLE_CREDENTIALS_JSON || secrets.GOOGLE_CREDENTIALS_JSON }}
          OAUTH_CLIENT_ID: ${{ env.OAUTH_CLIENT_ID || secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ env.OAUTH_CLIENT_SECRET || secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_REFRESH_TOKEN: ${{ env.OAUTH_REFRESH_TOKEN || secrets.OAUTH_REFRESH_TOKEN }}
          URL_COL: ${{ env.URL_COL }}
        working-directory: tools/faculty-cleaner
        run: |
          npm run run:pushdir

      - name: Upload cleaned (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cleaned-html
          path: cleaned/**
          if-no-files-found: ignore
