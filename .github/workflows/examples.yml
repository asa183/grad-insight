name: Examples Extract to Google Sheets

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
      SHEET_ID: ${{ secrets.SHEET_ID }}
      EXAMPLES_MODE: "bulk"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Build examples targets JSON
        env:
          STRICT_ENABLED: "0"
        run: |
          python -m pip install --quiet gspread google-auth
          python scripts/examples_to_targets_json.py
          echo '--- DEBUG: examples_targets.json length & first item ---'
          if [ -f config/examples_targets.json ]; then
            jq 'length' config/examples_targets.json || true
            jq '.[0]' config/examples_targets.json || true
          else
            echo 'config/examples_targets.json not found'
          fi
      - name: Install deps for extract
        run: |
          python -m pip install --quiet requests beautifulsoup4 lxml
      - name: Install Playwright (Python)
        run: |
          python -m pip install --quiet playwright
      - name: Resolve Playwright version
        id: pwver
        run: |
          echo "version=$(python -c 'import playwright; print(playwright.__version__)')" >> "$GITHUB_OUTPUT"
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pwver.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright browsers (Chromium only)
        run: |
          python -m playwright install --with-deps chromium
      - name: Install OCR deps (best-effort)
        run: |
          sudo apt-get update -y || true
          sudo apt-get install -y tesseract-ocr || true
          python -m pip install --quiet pillow pytesseract || true
      - name: Extract from examples (selectors-driven)
        env:
          EX_ENUM_MAX_ITEMS: "120"
          EX_ENUM_MAX_SHOTS: "6"
          EX_ENUM_TIMEOUT_MS: "120000"
          EX_NAV_TIMEOUT_MS: "15000"
          EX_ACTION_TIMEOUT_MS: "5000"
          DEBUG_ARTIFACTS: "1"
          DEBUG_SAMPLE_N: "80"
        run: |
          python -u -m src.run_extract config/examples_targets.json
      - name: Upload extraction artifacts (logs + evidence)
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ github.run_id }}
          path: |
            logs/**
            evidence/**
          if-no-files-found: ignore
      - name: Debug CSV outputs
        run: |
          ls -1 *.csv || true
          for f in *.csv; do echo "== $f =="; head -n 5 "$f"; break; done || true
      - name: Push CSVs to Google Sheets
        run: |
          python -m pip install --quiet gspread google-auth
          python scripts/push_to_sheet.py
